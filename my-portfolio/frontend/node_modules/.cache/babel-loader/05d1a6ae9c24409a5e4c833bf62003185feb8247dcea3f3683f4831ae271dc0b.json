{"ast":null,"code":"var _jsxFileName = \"/Users/manaljaleel/csci3172/labs/lab8/my-portfolio/frontend/src/components/ContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    subject: \"\",\n    consent: false\n  });\n  const [errors, setErrors] = useState({});\n\n  // Regular expressions for validation\n  const nameRegex = /^[A-Za-zÀ-ÖØ-öø-ÿ' -]+$/;\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const subjectRegex = /^[A-Za-z ]+$/;\n  const sanitizeInput = value => {\n    return value.replace(/[<>]/g, \"\"); // Removes < and > to prevent HTML injection\n  };\n  const validateForm = () => {\n    let newErrors = {};\n    if (!formData.name.match(nameRegex)) {\n      newErrors.name = \"Invalid name format.\";\n    }\n    if (!formData.email.match(emailRegex)) {\n      newErrors.email = \"Invalid email format.\";\n    }\n    if (!formData.subject.match(subjectRegex)) {\n      newErrors.subject = \"Subject must contain only letters.\";\n    }\n    if (!formData.message || formData.message.length < 5) {\n      newErrors.message = \"Message must be at least 5 characters.\";\n    }\n    if (!formData.consent) {\n      newErrors.consent = \"You must agree to be contacted.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form submitted successfully!\");\n      console.log(\"Form Data: \", formData);\n      // Submit the form data to the backend\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: sanitizeInput(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"subject\",\n        value: formData.subject,\n        onChange: e => setFormData({\n          ...formData,\n          subject: sanitizeInput(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        value: formData.message,\n        onChange: e => setFormData({\n          ...formData,\n          message: sanitizeInput(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"consent\",\n        checked: formData.consent,\n        onChange: e => setFormData({\n          ...formData,\n          consent: e.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"I consent to be contacted and understand my information will be stored securely.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), errors.consent && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.consent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"dlvwKtR0EYDAc9DyJNzeJHvozl0=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","name","email","message","subject","consent","errors","setErrors","nameRegex","emailRegex","subjectRegex","sanitizeInput","value","replace","validateForm","newErrors","match","length","Object","keys","handleSubmit","e","preventDefault","alert","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","checked","_c","$RefreshReg$"],"sources":["/Users/manaljaleel/csci3172/labs/lab8/my-portfolio/frontend/src/components/ContactForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    subject: \"\",\n    consent: false,\n  });\n\n  const [errors, setErrors] = useState({});\n\n  // Regular expressions for validation\n  const nameRegex = /^[A-Za-zÀ-ÖØ-öø-ÿ' -]+$/;\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const subjectRegex = /^[A-Za-z ]+$/;\n\n  const sanitizeInput = (value) => {\n    return value.replace(/[<>]/g, \"\"); // Removes < and > to prevent HTML injection\n  };\n\n  const validateForm = () => {\n    let newErrors = {};\n\n    if (!formData.name.match(nameRegex)) {\n      newErrors.name = \"Invalid name format.\";\n    }\n\n    if (!formData.email.match(emailRegex)) {\n      newErrors.email = \"Invalid email format.\";\n    }\n\n    if (!formData.subject.match(subjectRegex)) {\n      newErrors.subject = \"Subject must contain only letters.\";\n    }\n\n    if (!formData.message || formData.message.length < 5) {\n      newErrors.message = \"Message must be at least 5 characters.\";\n    }\n\n    if (!formData.consent) {\n      newErrors.consent = \"You must agree to be contacted.\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form submitted successfully!\");\n      console.log(\"Form Data: \", formData);\n      // Submit the form data to the backend\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Name:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={formData.name}\n          onChange={(e) => setFormData({ ...formData, name: sanitizeInput(e.target.value) })}\n        />\n        {errors.name && <p>{errors.name}</p>}\n      </div>\n\n      <div>\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n        />\n        {errors.email && <p>{errors.email}</p>}\n      </div>\n\n      <div>\n        <label>Subject:</label>\n        <input\n          type=\"text\"\n          name=\"subject\"\n          value={formData.subject}\n          onChange={(e) => setFormData({ ...formData, subject: sanitizeInput(e.target.value) })}\n        />\n        {errors.subject && <p>{errors.subject}</p>}\n      </div>\n\n      <div>\n        <label>Message:</label>\n        <textarea\n          name=\"message\"\n          value={formData.message}\n          onChange={(e) => setFormData({ ...formData, message: sanitizeInput(e.target.value) })}\n        />\n        {errors.message && <p>{errors.message}</p>}\n      </div>\n\n      <div>\n        <input\n          type=\"checkbox\"\n          name=\"consent\"\n          checked={formData.consent}\n          onChange={(e) => setFormData({ ...formData, consent: e.target.checked })}\n        />\n        <label>I consent to be contacted and understand my information will be stored securely.</label>\n        {errors.consent && <p>{errors.consent}</p>}\n      </div>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}