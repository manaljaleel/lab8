{"ast":null,"code":"var _jsxFileName = \"/Users/manaljaleel/csci3172/labs/lab8/my-portfolio/frontend/src/components/ContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ContactForm.css\"; // Add a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const initialFormData = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    subject: \"\",\n    consent: false\n  };\n\n  // Load saved draft from localStorage\n  const savedFormData = JSON.parse(localStorage.getItem(\"contactForm\")) || initialFormData;\n  const [formData, setFormData] = useState(savedFormData);\n  const [errors, setErrors] = useState({});\n  const [savedDraft, setSavedDraft] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Regular expressions for validation\n  const nameRegex = /^[A-Za-zÀ-ÖØ-öø-ÿ' -]{2,50}$/;\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const subjectRegex = /^[A-Za-z0-9 ]{2,100}$/;\n\n  // Save form data in localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"contactForm\", JSON.stringify(formData));\n    setSavedDraft(true); // Show a draft saved message\n  }, [formData]);\n\n  // Sanitize input\n  const sanitizeInput = value => {\n    return value.trim().replace(/[<>]/g, \"\").replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n  };\n  const validateForm = () => {\n    let newErrors = {};\n    if (!nameRegex.test(formData.name)) {\n      newErrors.name = \"Invalid name format (only letters and spaces).\";\n    }\n    if (!emailRegex.test(formData.email)) {\n      newErrors.email = \"Invalid email format.\";\n    }\n    if (!subjectRegex.test(formData.subject)) {\n      newErrors.subject = \"Subject must contain only letters and numbers.\";\n    }\n    if (!formData.message || formData.message.length < 5) {\n      newErrors.message = \"Message must be at least 5 characters.\";\n    }\n    if (!formData.consent) {\n      newErrors.consent = \"You must agree to be contacted.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      setSuccessMessage(\"✅ Form submitted successfully!\");\n      setErrors({});\n      setSavedDraft(false);\n\n      // Clear localStorage draft after successful submission\n      localStorage.removeItem(\"contactForm\");\n\n      // Reset form\n      setFormData(initialFormData);\n\n      // Hide success message after 3 seconds\n      setTimeout(() => setSuccessMessage(\"\"), 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-form-container\",\n    children: [savedDraft && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"draft-message\",\n      children: \"\\uD83D\\uDCDD Draft saved!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          className: errors.name ? \"input-error\" : \"\",\n          onChange: e => setFormData({\n            ...formData,\n            name: sanitizeInput(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          className: errors.email ? \"input-error\" : \"\",\n          onChange: e => setFormData({\n            ...formData,\n            email: sanitizeInput(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"subject\",\n          value: formData.subject,\n          className: errors.subject ? \"input-error\" : \"\",\n          onChange: e => setFormData({\n            ...formData,\n            subject: sanitizeInput(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          value: formData.message,\n          className: errors.message ? \"input-error\" : \"\",\n          onChange: e => setFormData({\n            ...formData,\n            message: sanitizeInput(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"consent\",\n          checked: formData.consent,\n          onChange: e => setFormData({\n            ...formData,\n            consent: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"I consent to be contacted and understand my information will be stored securely.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), errors.consent && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.consent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"OPwbwtP0Hu8kVAh05lB5KoOUC20=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContactForm","_s","initialFormData","name","email","message","subject","consent","savedFormData","JSON","parse","localStorage","getItem","formData","setFormData","errors","setErrors","savedDraft","setSavedDraft","successMessage","setSuccessMessage","nameRegex","emailRegex","subjectRegex","setItem","stringify","sanitizeInput","value","trim","replace","validateForm","newErrors","test","length","Object","keys","handleSubmit","e","preventDefault","removeItem","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","checked","_c","$RefreshReg$"],"sources":["/Users/manaljaleel/csci3172/labs/lab8/my-portfolio/frontend/src/components/ContactForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ContactForm.css\"; // Add a CSS file for styling\n\nconst ContactForm = () => {\n  const initialFormData = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    subject: \"\",\n    consent: false,\n  };\n\n  // Load saved draft from localStorage\n  const savedFormData = JSON.parse(localStorage.getItem(\"contactForm\")) || initialFormData;\n\n  const [formData, setFormData] = useState(savedFormData);\n  const [errors, setErrors] = useState({});\n  const [savedDraft, setSavedDraft] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Regular expressions for validation\n  const nameRegex = /^[A-Za-zÀ-ÖØ-öø-ÿ' -]{2,50}$/;\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const subjectRegex = /^[A-Za-z0-9 ]{2,100}$/;\n\n  // Save form data in localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"contactForm\", JSON.stringify(formData));\n    setSavedDraft(true); // Show a draft saved message\n  }, [formData]);\n\n  // Sanitize input\n  const sanitizeInput = (value) => {\n    return value\n      .trim()\n      .replace(/[<>]/g, \"\")\n      .replace(/&/g, \"&amp;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#39;\");\n  };\n\n  const validateForm = () => {\n    let newErrors = {};\n\n    if (!nameRegex.test(formData.name)) {\n      newErrors.name = \"Invalid name format (only letters and spaces).\";\n    }\n\n    if (!emailRegex.test(formData.email)) {\n      newErrors.email = \"Invalid email format.\";\n    }\n\n    if (!subjectRegex.test(formData.subject)) {\n      newErrors.subject = \"Subject must contain only letters and numbers.\";\n    }\n\n    if (!formData.message || formData.message.length < 5) {\n      newErrors.message = \"Message must be at least 5 characters.\";\n    }\n\n    if (!formData.consent) {\n      newErrors.consent = \"You must agree to be contacted.\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      setSuccessMessage(\"✅ Form submitted successfully!\");\n      setErrors({});\n      setSavedDraft(false);\n\n      // Clear localStorage draft after successful submission\n      localStorage.removeItem(\"contactForm\");\n\n      // Reset form\n      setFormData(initialFormData);\n      \n      // Hide success message after 3 seconds\n      setTimeout(() => setSuccessMessage(\"\"), 3000);\n    }\n  };\n\n  return (\n    <div className=\"contact-form-container\">\n      {savedDraft && <p className=\"draft-message\">📝 Draft saved!</p>}\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            className={errors.name ? \"input-error\" : \"\"}\n            onChange={(e) => setFormData({ ...formData, name: sanitizeInput(e.target.value) })}\n          />\n          {errors.name && <p className=\"error-message\">{errors.name}</p>}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            className={errors.email ? \"input-error\" : \"\"}\n            onChange={(e) => setFormData({ ...formData, email: sanitizeInput(e.target.value) })}\n          />\n          {errors.email && <p className=\"error-message\">{errors.email}</p>}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Subject:</label>\n          <input\n            type=\"text\"\n            name=\"subject\"\n            value={formData.subject}\n            className={errors.subject ? \"input-error\" : \"\"}\n            onChange={(e) => setFormData({ ...formData, subject: sanitizeInput(e.target.value) })}\n          />\n          {errors.subject && <p className=\"error-message\">{errors.subject}</p>}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Message:</label>\n          <textarea\n            name=\"message\"\n            value={formData.message}\n            className={errors.message ? \"input-error\" : \"\"}\n            onChange={(e) => setFormData({ ...formData, message: sanitizeInput(e.target.value) })}\n          />\n          {errors.message && <p className=\"error-message\">{errors.message}</p>}\n        </div>\n\n        <div className=\"form-group checkbox-group\">\n          <input\n            type=\"checkbox\"\n            name=\"consent\"\n            checked={formData.consent}\n            onChange={(e) => setFormData({ ...formData, consent: e.target.checked })}\n          />\n          <label>I consent to be contacted and understand my information will be stored securely.</label>\n          {errors.consent && <p className=\"error-message\">{errors.consent}</p>}\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}