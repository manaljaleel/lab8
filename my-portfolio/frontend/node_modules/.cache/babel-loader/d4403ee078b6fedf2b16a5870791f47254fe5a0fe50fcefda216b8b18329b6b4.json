{"ast":null,"code":"var _jsxFileName = \"/Users/manaljaleel/csci3172/labs/lab8/my-portfolio/frontend/src/components/ContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const initialFormData = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    subject: \"\",\n    consent: false\n  };\n\n  // Load saved draft from localStorage\n  const savedFormData = JSON.parse(localStorage.getItem(\"contactForm\")) || initialFormData;\n  const [formData, setFormData] = useState(savedFormData);\n  const [errors, setErrors] = useState({});\n\n  // Regular expressions for validation\n  const nameRegex = /^[A-Za-zÀ-ÖØ-öø-ÿ' -]{2,50}$/;\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const subjectRegex = /^[A-Za-z0-9 ]{2,100}$/;\n\n  // Save form data in localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"contactForm\", JSON.stringify(formData));\n  }, [formData]);\n\n  // Sanitize input\n  const sanitizeInput = value => {\n    return value.trim().replace(/[<>]/g, \"\").replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n  };\n  const validateForm = () => {\n    let newErrors = {};\n    if (!nameRegex.test(formData.name)) {\n      newErrors.name = \"Invalid name format (only letters and spaces).\";\n    }\n    if (!emailRegex.test(formData.email)) {\n      newErrors.email = \"Invalid email format.\";\n    }\n    if (!subjectRegex.test(formData.subject)) {\n      newErrors.subject = \"Subject must contain only letters and numbers.\";\n    }\n    if (!formData.message || formData.message.length < 5) {\n      newErrors.message = \"Message must be at least 5 characters.\";\n    }\n    if (!formData.consent) {\n      newErrors.consent = \"You must agree to be contacted.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form submitted successfully!\");\n      console.log(\"Form Data:\", formData);\n\n      // Clear localStorage draft after successful submission\n      localStorage.removeItem(\"contactForm\");\n\n      // Reset form\n      setFormData(initialFormData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: sanitizeInput(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: sanitizeInput(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"subject\",\n        value: formData.subject,\n        onChange: e => setFormData({\n          ...formData,\n          subject: sanitizeInput(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        value: formData.message,\n        onChange: e => setFormData({\n          ...formData,\n          message: sanitizeInput(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"consent\",\n        checked: formData.consent,\n        onChange: e => setFormData({\n          ...formData,\n          consent: e.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"I consent to be contacted and understand my information will be stored securely.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), errors.consent && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.consent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"k3CBpEW1iqxBx6E8vdsy/AC2IDw=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContactForm","_s","initialFormData","name","email","message","subject","consent","savedFormData","JSON","parse","localStorage","getItem","formData","setFormData","errors","setErrors","nameRegex","emailRegex","subjectRegex","setItem","stringify","sanitizeInput","value","trim","replace","validateForm","newErrors","test","length","Object","keys","handleSubmit","e","preventDefault","alert","console","log","removeItem","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","className","checked","_c","$RefreshReg$"],"sources":["/Users/manaljaleel/csci3172/labs/lab8/my-portfolio/frontend/src/components/ContactForm.js"],"sourcesContent":[" import React, { useState, useEffect } from \"react\";\n\nconst ContactForm = () => {\n  const initialFormData = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    subject: \"\",\n    consent: false,\n  };\n\n  // Load saved draft from localStorage\n  const savedFormData = JSON.parse(localStorage.getItem(\"contactForm\")) || initialFormData;\n\n  const [formData, setFormData] = useState(savedFormData);\n  const [errors, setErrors] = useState({});\n\n  // Regular expressions for validation\n  const nameRegex = /^[A-Za-zÀ-ÖØ-öø-ÿ' -]{2,50}$/;\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const subjectRegex = /^[A-Za-z0-9 ]{2,100}$/;\n\n  // Save form data in localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"contactForm\", JSON.stringify(formData));\n  }, [formData]);\n\n  // Sanitize input\n  const sanitizeInput = (value) => {\n    return value\n      .trim()\n      .replace(/[<>]/g, \"\")\n      .replace(/&/g, \"&amp;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#39;\");\n  };\n\n  const validateForm = () => {\n    let newErrors = {};\n\n    if (!nameRegex.test(formData.name)) {\n      newErrors.name = \"Invalid name format (only letters and spaces).\";\n    }\n\n    if (!emailRegex.test(formData.email)) {\n      newErrors.email = \"Invalid email format.\";\n    }\n\n    if (!subjectRegex.test(formData.subject)) {\n      newErrors.subject = \"Subject must contain only letters and numbers.\";\n    }\n\n    if (!formData.message || formData.message.length < 5) {\n      newErrors.message = \"Message must be at least 5 characters.\";\n    }\n\n    if (!formData.consent) {\n      newErrors.consent = \"You must agree to be contacted.\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      alert(\"Form submitted successfully!\");\n      console.log(\"Form Data:\", formData);\n\n      // Clear localStorage draft after successful submission\n      localStorage.removeItem(\"contactForm\");\n\n      // Reset form\n      setFormData(initialFormData);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Name:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={formData.name}\n          onChange={(e) => setFormData({ ...formData, name: sanitizeInput(e.target.value) })}\n        />\n        {errors.name && <p className=\"error\">{errors.name}</p>}\n      </div>\n\n      <div>\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={(e) => setFormData({ ...formData, email: sanitizeInput(e.target.value) })}\n        />\n        {errors.email && <p className=\"error\">{errors.email}</p>}\n      </div>\n\n      <div>\n        <label>Subject:</label>\n        <input\n          type=\"text\"\n          name=\"subject\"\n          value={formData.subject}\n          onChange={(e) => setFormData({ ...formData, subject: sanitizeInput(e.target.value) })}\n        />\n        {errors.subject && <p className=\"error\">{errors.subject}</p>}\n      </div>\n\n      <div>\n        <label>Message:</label>\n        <textarea\n          name=\"message\"\n          value={formData.message}\n          onChange={(e) => setFormData({ ...formData, message: sanitizeInput(e.target.value) })}\n        />\n        {errors.message && <p className=\"error\">{errors.message}</p>}\n      </div>\n\n      <div>\n        <input\n          type=\"checkbox\"\n          name=\"consent\"\n          checked={formData.consent}\n          onChange={(e) => setFormData({ ...formData, consent: e.target.checked })}\n        />\n        <label>I consent to be contacted and understand my information will be stored securely.</label>\n        {errors.consent && <p className=\"error\">{errors.consent}</p>}\n      </div>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}