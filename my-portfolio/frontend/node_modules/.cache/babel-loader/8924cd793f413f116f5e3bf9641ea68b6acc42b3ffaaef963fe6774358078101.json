{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import Home from\"./pages/Home\";import About from\"./pages/About\";import Projects from\"./pages/Projects\";import NotFound from\"./pages/NotFound\";import Header from\"./components/Header\";import Footer from\"./components/Footer\";import ContactForm from\"./components/ContactForm\";import Messages from\"./components/Messages\";import\"./styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Get the current theme from localStorage, default to \"light\" if not found\nconst[theme,setTheme]=useState(localStorage.getItem(\"theme\")||\"light\");// Function to toggle theme between light and dark\nconst toggleTheme=()=>{const newTheme=theme===\"light\"?\"dark\":\"light\";// Toggle theme\nsetTheme(newTheme);// Update the state with the new theme\nlocalStorage.setItem(\"theme\",newTheme);// Save the theme to localStorage\n};// Apply the current theme as a class to the body element when theme changes\nuseEffect(()=>{document.body.className=theme;},[theme]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:`app ${theme}`,children:[/*#__PURE__*/_jsx(Header,{theme:theme,toggleTheme:toggleTheme}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/projects\",element:/*#__PURE__*/_jsx(Projects,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})}),/*#__PURE__*/_jsx(Route,{path:\"/contact\",element:/*#__PURE__*/_jsx(ContactForm,{})}),/*#__PURE__*/_jsx(Route,{path:\"/messages\",element:/*#__PURE__*/_jsx(Messages,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","About","Projects","NotFound","Header","Footer","ContactForm","Messages","jsx","_jsx","jsxs","_jsxs","App","theme","setTheme","localStorage","getItem","toggleTheme","newTheme","setItem","document","body","className","children","path","element"],"sources":["/Users/manaljaleel/WebCent Lab8/my-portfolio/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Projects from \"./pages/Projects\";\nimport NotFound from \"./pages/NotFound\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport ContactForm from \"./components/ContactForm\";\nimport Messages from \"./components/Messages\";\nimport \"./styles.css\";\n\nfunction App() {\n  // Get the current theme from localStorage, default to \"light\" if not found\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\n\n  // Function to toggle theme between light and dark\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\"; // Toggle theme\n    setTheme(newTheme); // Update the state with the new theme\n    localStorage.setItem(\"theme\", newTheme); // Save the theme to localStorage\n  };\n\n  // Apply the current theme as a class to the body element when theme changes\n  useEffect(() => {\n    document.body.className = theme;\n  }, [theme]);\n\n  return (\n    <Router>\n      <div className={`app ${theme}`}>\n        {/* Header with theme toggle */}\n        <Header theme={theme} toggleTheme={toggleTheme} />\n\n        {/* Routes for different pages */}\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/projects\" element={<Projects />} />\n          <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/contact\" element={<ContactForm />} />\n          <Route path=\"/messages\" element={<Messages />} />\n        </Routes>\n\n        {/* Footer component */}\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAACqB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,OAAO,CAAC,CAE5E;AACA,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,QAAQ,CAAGL,KAAK,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAE;AACvDC,QAAQ,CAACI,QAAQ,CAAC,CAAE;AACpBH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAC,CAAE;AAC3C,CAAC,CAED;AACAvB,SAAS,CAAC,IAAM,CACdyB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAGT,KAAK,CACjC,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,mBACEJ,IAAA,CAACZ,MAAM,EAAA0B,QAAA,cACLZ,KAAA,QAAKW,SAAS,CAAE,OAAOT,KAAK,EAAG,CAAAU,QAAA,eAE7Bd,IAAA,CAACL,MAAM,EAACS,KAAK,CAAEA,KAAM,CAACI,WAAW,CAAEA,WAAY,CAAE,CAAC,cAGlDN,KAAA,CAACb,MAAM,EAAAyB,QAAA,eACLd,IAAA,CAACV,KAAK,EAACyB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEhB,IAAA,CAACT,IAAI,GAAE,CAAE,CAAE,CAAC,cACrCS,IAAA,CAACV,KAAK,EAACyB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEhB,IAAA,CAACR,KAAK,GAAE,CAAE,CAAE,CAAC,cAC3CQ,IAAA,CAACV,KAAK,EAACyB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEhB,IAAA,CAACP,QAAQ,GAAE,CAAE,CAAE,CAAC,cACjDO,IAAA,CAACV,KAAK,EAACyB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEhB,IAAA,CAACN,QAAQ,GAAE,CAAE,CAAE,CAAC,cACzCM,IAAA,CAACV,KAAK,EAACyB,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEhB,IAAA,CAACH,WAAW,GAAE,CAAE,CAAE,CAAC,cACnDG,IAAA,CAACV,KAAK,EAACyB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEhB,IAAA,CAACF,QAAQ,GAAE,CAAE,CAAE,CAAC,EAC3C,CAAC,cAGTE,IAAA,CAACJ,MAAM,GAAE,CAAC,EACP,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAO,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}